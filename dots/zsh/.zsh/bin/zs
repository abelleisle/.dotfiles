#!/usr/bin/env zsh
# Zellij sessionizer

local session_path=${1:A}
local current_path=0

# If no session path was provided as an argument
if [[ -z $session_path ]]; then
    # Get the current working directory
    session_path=$(pwd)
    current_path=1
fi

if [[ ! -e $session_path ]]; then
    echo "Provided session path $session_path doesn't exist :("
    return 1
fi

if [[ -f $session_path ]]; then
    echo "Provided session path $session_path is not a directory :("
    return 1
fi

# Reduce the path to get our session name:
#   Use `reduce_path` to get a shortened path (that's also human readable)
#   Remove all '/' except for the last two (and replace those with '.')
#     1. Reverse the string
#     2. Replacing '/' with a random char (§) twice.
#     3. Replace the rest of '/' with nothing.
#     4. Replace all '.' in path with '_'
#     5. Replace '§' with '.' (Zellij can't have '/' in session name)
#     6. Reverse the string again (correct way around now)
#     7. Replace ~. at beginning with ~ (looks better than '~.' if it's a short path)
local session_name=$(reduce_path $session_path | rev | sed 's|/|§|1; s|/|§|1; s|/||g; s|\.|_|g; s|§|.|g' | rev | sed 's|~\.|~|1')

echo "Session name: $session_name"

# We're outside of zellij, so lets create a new session or attach to a new one.
if [[ -z $ZELLIJ ]]; then
    if [[ $current_path -eq 0 ]]; then
        echo "cd'ing into $session_path"
        cd $session_path
    fi

    # -c will make zellij to either create a new session or to attach into an existing one
    zellij attach $session_name -c
    return 0
fi

echo "Please exit zellij to use zs"

return 1
